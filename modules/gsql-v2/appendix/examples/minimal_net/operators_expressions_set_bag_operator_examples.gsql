CREATE QUERY set_operators_ex() FOR GRAPH Minimal_Net   {
    SetAccum<INT> @@set_a, @@set_b, @@a_union_b, @@a_intsct_b, @@a_minus_b;
    BagAccum<INT> @@bag_d, @@bag_e, @@d_union_e, @@d_intsct_e, @@d_minus_e;
    BagAccum<INT> @@d_minus_a, @@d_union_a, @@a_union_b_bag;

    BOOL x;

    @@set_a = (1,2,3,4);      PRINT @@set_a;
    @@set_b = (2,4,6,8);      PRINT @@set_b;

    @@a_union_b = @@set_a UNION @@set_b ;      PRINT @@a_union_b;   // (1, 2, 3, 4, 6, 8)
    @@a_intsct_b = @@set_a INTERSECT @@set_b;  PRINT @@a_intsct_b;   // (2, 4)
    @@a_minus_b = @@set_a MINUS @@set_b ;      PRINT @@a_minus_b;   // C = (1, 3)

    @@bag_d = (1,2,2,3);      PRINT @@bag_d;
    @@bag_e = (2,3,5,7);      PRINT @@bag_e;

    @@d_union_e = @@bag_d UNION @@bag_e;     PRINT @@d_union_e;   // (1, 2, 2, 2, 3, 3, 5, 7)
    @@d_intsct_e = @@bag_d INTERSECT @@bag_e; PRINT @@d_intsct_e; // (2, 3)
    @@d_minus_e = @@bag_d MINUS @@bag_e;     PRINT @@d_minus_e;   // (1, 2)
    @@d_minus_a = @@bag_d MINUS @@set_a;     PRINT @@d_minus_a;   // (2)
    //  bag UNION set is a bag
    @@d_union_a = @@bag_d UNION @@set_a;     PRINT @@d_union_a;   // (1, 1, 2, 2, 2, 3, 3, 4)
    // because set UNION set is a set
    @@a_union_b_bag = @@set_a UNION @@set_b;  PRINT @@a_union_b_bag;  // (1, 2, 3, 4, 6, 8)
}